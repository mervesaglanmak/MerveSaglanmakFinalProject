@model BookStore.Application.Controllers.BooksViewModel
@{
    ViewData["Title"] = "Anasayfa";
}
<div class="container space-top-1 space-top-md-2 space-bottom-2 space-bottom-lg-3">
    <div class="row">
        <div class="col-lg-9">
            <!-- Sorting -->
            <div class="row align-items-center mb-5">
                <div class="col-lg-6 mb-3 mb-lg-0">
                    <span class="font-size-1 ml-1">@Model.Books.Count() books listed</span>
                </div>

                <div class="col-lg-6 align-self-lg-end text-lg-right">
                    <ul class="list-inline mb-0">
                        <li class="list-inline-item">
                            <!-- Select -->
                            <select class="js-custom-select"
                                    data-hs-select2-options='{
                          "minimumResultsForSearch": "Infinity",
                          "customClass": "btn btn-xs btn-white dropdown-toggle",
                          "dropdownAutoWidth": true,
                          "width": "auto"
                        }'>
                                <option value="mostRecent" selected>Order By</option>
                                <option value="priceHighLow">Price (Desc)</option>
                                <option value="priceLowHigh">Price (Asc)</option>
                            </select>
                            <!-- End Select -->
                        </li>
                        <li class="list-inline-item">
                            <!-- Select -->
                            <select class="js-custom-select"
                                    data-hs-select2-options='{
                          "minimumResultsForSearch": "Infinity",
                          "customClass": "btn btn-xs btn-white dropdown-toggle",
                          "dropdownAutoWidth": true,
                          "width": "auto"
                        }'>
                                <option value="alphabeticalOrderSelect1" selected>Name (A-Z)</option>
                                <option value="alphabeticalOrderSelect2">Name (Z-A)</option>
                            </select>
                            <!-- End Select -->
                        </li>
                    </ul>
                </div>
            </div>
            <!-- End Sorting -->

            <ul class="list-unstyled">
                <!-- Products -->
                @foreach (var item in Model.Books)
                {
                    <li class="card border shadow-none mb-3 mb-md-5">
                        <div class="row no-gutters">
                            <div class="col-md-4">
                                <img class="card-img" height="200" style="object-fit: contain; padding: 10px;" src="@item.Images" alt="Image Description">
                            </div>

                            <div class="col-md-8">
                                <div class="card-body">
                                    <div class="mb-2">
                                        <a class="d-inline-block text-body font-weight-bold mb-1" asp-action="Detail" asp-route-id="@item.Id">@item.Name</a>
                                        <span class="d-block font-size-1">
                                            <a class="text-inherit">@item.Category.Name - @item.Publisher.Name Yayınları</a>
                                        </span>
                                        <div class="d-block">
                                            <span class="h6">@item.Author.Name</span>
                                        </div>
                                        <div class="d-block">
                                            <span class="h5">@item.Price ₺</span>
                                        </div>
                                    </div>

                                    <div class="mb-3">
                                        <a class="d-inline-flex align-items-center small" href="#">
                                            <div class="text-warning mr-2">
                                                @for (var i = 0; i < 5; i++)
                                                {
                                                    if (item.Rating > i)
                                                    {
                                                        <i class="far fa-star"></i>
                                                    }
                                                    else
                                                    {

                                                        <i class="far fa-star text-muted"></i>
                                                    }
                                                }
                                            </div>
                                            <span>@item.Rating</span>
                                        </a>
                                    </div>
                                    <button type="button" class="btn btn-sm btn-outline-primary btn-pill transition-3d-hover mr-1 addToCart" data-bookId="@item.Id">Add to Cart</button>
                                    <button type="button" class="btn btn-sm btn-soft-secondary btn-pill transition-3d-hover like" data-id="@item.Id">
                                        <i class="far fa-heart mr-1"></i> Favorite
                                    </button>
                                </div>
                            </div>
                        </div>
                    </li>
                }
            </ul>
        </div>
        <!-- Filters -->
        <div class="col-lg-3">
            <form method="GET">
                <div class="border-bottom pb-4 mb-4">
                    <h4>Price</h4>

                    <!-- Range Slider -->
                    <input class="js-ion-range-slider" type="text"
                           data-hs-ion-range-slider-options='{
                       "extra_classes": "range-slider range-slider-indicator range-slider-grid",
                       "type": "double",
                       "grid": true,
                       "hide_from_to": false,
                       "prefix": "₺",
                       "min": @Model.MinPrice,
                       "max": @Model.MaxPrice,
                       @if(Model.FilterModel != null)
                       {
                             <text>"from": @Model.FilterModel?.MinPrice.Value,</text>
                            <text>"to": @Model.FilterModel?.MaxPrice.Value,</text>
                       }
                       "result_min_target_el": "#minPrice",
                       "result_max_target_el": "#maxPrice"
                     }'>
                    <div class="d-flex justify-content-between mt-4">
                        <input type="text" class="form-control form-control-sm max-w-9rem" id="minPrice" name="minPrice">
                        <input type="text" class="form-control form-control-sm max-w-9rem mt-0" id="maxPrice" name="maxPrice">
                    </div>
                    <!-- End Range Slider -->
                </div>

                <div class="border-bottom pb-4 mb-4">
                    <h4>Publisher</h4>
                    @foreach (var item in Model.Publishers)
                    {
                        <!-- Checkboxes -->
                        <div class="form-group d-flex align-items-center justify-content-between font-size-1 text-lh-lg text-body mb-1">
                            <div class="custom-control custom-checkbox">
                                @if (Model.FilterModel?.PublisherIds?.Contains(item.Id) ?? false)
                                {

                                    <input type="checkbox" class="custom-control-input publisherIds" id="publisherIds-@item.Id" value="@item.Id" checked>
                                }
                                else
                                {
                                    <input type="checkbox" class="custom-control-input publisherIds" id="publisherIds-@item.Id" value="@item.Id">
                                }
                                <label class="custom-control-label text-lh-lg" for="publisherIds-@item.Id">@item.Name</label>
                            </div>
                            <small>@Model.Books.Count(x => x.Publisher.Id == item.Id)</small>
                        </div>
                    }
                    <!-- End Checkboxes -->
                </div>
                <div class="border-bottom pb-4 mb-4">
                    <h4>Category</h4>
                    @foreach (var item in Model.Categories)
                    {
                        <!-- Checkboxes -->
                        <div class="form-group d-flex align-items-center justify-content-between font-size-1 text-lh-lg text-body mb-1">
                            <div class="custom-control custom-checkbox">
                                @if (Model.FilterModel?.CategoryIds?.Contains(item.Id) ?? false)
                                {
                                    <input type="checkbox" class="custom-control-input categoryIds" id="categoryIds-@item.Id" value="@item.Id" checked>
                                }
                                else
                                {
                                    <input type="checkbox" class="custom-control-input categoryIds" id="categoryIds-@item.Id" value="@item.Id">

                                }
                                <label class="custom-control-label text-lh-lg" for="categoryIds-@item.Id">@item.Name</label>
                            </div>
                            <small>@Model.Books.Count(x => x.Category.Id == item.Id)</small>
                        </div>
                    }

                    <!-- End Checkboxes -->
                </div>
                <div class="border-bottom pb-4 mb-4">
                    <h4>Author</h4>
                    @foreach (var item in Model.Authors)
                    {
                        <!-- Checkboxes -->
                        <div class="form-group d-flex align-items-center justify-content-between font-size-1 text-lh-lg text-body mb-1">
                            <div class="custom-control custom-checkbox">
                                @if (Model.FilterModel?.AuthorsIds?.Contains(item.Id) ?? false)
                                {

                                    <input type="checkbox" class="custom-control-input authorIds" id="authorIds-@item.Id" value="@item.Id" checked>
                                }
                                else
                                {
                                    <input type="checkbox" class="custom-control-input authorIds" id="authorIds-@item.Id" value="@item.Id">
                                }
                                <label class="custom-control-label text-lh-lg" for="authorIds-@item.Id">@item.Name</label>
                            </div>
                            <small>@Model.Books.Count(x => x.Author.Id == item.Id)</small>
                        </div>
                    }
                    <!-- End Checkboxes -->
                </div>
                <div class="border-bottom pb-4 mb-4">
                    <h4>Rating</h4>
                    @foreach (var item in Model.Books.OrderBy(x => x.Rating).GroupBy(x => x.Rating))
                    {
                        <!-- Checkboxes -->
                        <div class="form-group d-flex align-items-center justify-content-between font-size-1 text-lh-lg text-body mb-0">
                            <div class="custom-control custom-checkbox">
                                <input type="checkbox" class="custom-control-input" id="rating-@item.Key">
                                <label class="custom-control-label" for="rating1">
                                    <span class="d-block text-warning">
                                        @for (var i = 0; i < item.Key; i++)
                                        {
                                            <i class="fas fa-star"></i>
                                        }
                                    </span>
                                </label>
                            </div>
                            <small>@item.Count()</small>
                        </div>
                    }
                </div>
                <input type="hidden" name="publisherIds" id="publisherIds_val" />
                <input type="hidden" name="authorIds" id="authorIds_val" />
                <input type="hidden" name="categoryIds" id="categoryIds_val" />
                <button type="submit" class="btn btn-sm btn-block btn-soft-secondary transition-3d-hover" id="filter">Filtrele</button>
            </form>
        </div>
        <!-- End Filters -->
    </div>
</div>

@section Scripts {
    <script src="~/vendor/hs-header/dist/hs-header.min.js"></script>
    <script src="~/vendor/hs-go-to/dist/hs-go-to.min.js"></script>
    <script src="~/vendor/hs-unfold/dist/hs-unfold.min.js"></script>
    <script src="~/vendor/hs-mega-menu/dist/hs-mega-menu.min.js"></script>
    <script src="~/vendor/hs-show-animation/dist/hs-show-animation.min.js"></script>
    <script src="~/vendor/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/vendor/select2/dist/js/select2.full.min.js"></script>
    <script src="~/vendor/ion-rangeslider/js/ion.rangeSlider.min.js"></script>
    <script src="~/js/hs.core.js"></script>
    <script src="~/js/hs.validation.js"></script>
    <script src="~/js/hs.select2.js"></script>
    <script src="~/js/hs.ion-range-slider.js"></script>
    <script>
        // initialization of select2
        $('.js-custom-select').each(function () {
            var select2 = $.HSCore.components.HSSelect2.init($(this));
        });

        // initialization of ion range slider
        $('.js-ion-range-slider').each(function () {
            var ionRangeSlider = $.HSCore.components.HSIonRangeSlider.init($(this));
        });

        const publisherIds = [];
        @if(Model.FilterModel?.PublisherIds != null)
        {
            @foreach(var id in Model.FilterModel?.PublisherIds)
            {
                @:publisherIds.push(@id)
            }
        }

        $('.publisherIds').click(function () {
            let val = parseInt($(this).val());
            let index = publisherIds.indexOf(val);
            index == -1 ? publisherIds.push(val) : publisherIds.splice(index, 1);
            $('#publisherIds_val').val(publisherIds);
        })

        const authorIds = [];
        @if(Model.FilterModel?.AuthorsIds != null)
        {
            @foreach(var id in Model.FilterModel?.AuthorsIds)
            {
                @:authorIds.push(@id)
            }
        }

        $('.authorIds').click(function () {
            let val = parseInt($(this).val());
            let index = authorIds.indexOf(val);
            debugger;
            index == -1 ? authorIds.push(val) : authorIds.splice(index, 1);
            $('#authorIds_val').val(authorIds);
        })

        const categoryIds = [];
        @if(Model.FilterModel?.CategoryIds != null)
        {
            @foreach(var id in Model.FilterModel?.CategoryIds)
            {
                @:categoryIds.push(@id)
            }
        }

        $('.categoryIds').click(function () {
            let val = parseInt($(this).val());
            let index = categoryIds.indexOf(val);
            index == -1 ? categoryIds.push(val) : categoryIds.splice(index, 1);
            $('#categoryIds_val').val(categoryIds);
        });

        $('.addToCart').click(function (e) {
            let bookId = $(this).data("bookid");
            $.post("/home/addToCart", { bookId: bookId }, function (e) {
                Swal.fire(
                    'Tebrikler',
                    'Ürünüz sepete eklendi!!',
                    'success'
                )
            })
        });

        $('.like').click(function (e) {
            let itemId = $(this).data("id");
            $.post('/favorites/markBookAsFavorite', { bookId: itemId }, function () {
                Swal.fire({
                    position: 'top-end',
                    icon: 'success',
                    title: 'Ürün beğeni listenize eklendi',
                    showConfirmButton: false,
                    timer: 1500
                })
            })
        })
    </script>
}